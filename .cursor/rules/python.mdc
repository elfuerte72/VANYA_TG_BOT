---
description:
globs:
alwaysApply: false
---
# Python Coding Standards
description: –°—Ç–∞–Ω–¥–∞—Ä—Ç—ã –∏ –ª—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ –Ω–∞–ø–∏—Å–∞–Ω–∏—è Python –∫–æ–¥–∞ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞

autoAttach:
  - "**/*.py"
  - "**/*.pyi"
  - "**/pyproject.toml"

### üìù Code Style
- Follow PEP 8 guidelines
- Use type hints for all function parameters and return values
- Maximum line length: 88 characters (black default)
- Use snake_case for functions and variables
- Use PascalCase for classes
- Use UPPERCASE for constants

### üì¶ Imports
- Group imports in the following order:
  1. Standard library imports
  2. Third-party imports
  3. Local application imports
- Use absolute imports for external packages
- Use relative imports for local modules
- No wildcard imports (from module import *)

### üèóÔ∏è Function Design
- Functions should do one thing and do it well
- Maximum function length: 50 lines
- Use descriptive function names that indicate action
- Document all functions with Google-style docstrings:
```python
def function_name(param1: type, param2: type) -> return_type:
    """–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏.

    Args:
        param1: –û–ø–∏—Å–∞–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞
        param2: –û–ø–∏—Å–∞–Ω–∏–µ –≤—Ç–æ—Ä–æ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞

    Returns:
        –û–ø–∏—Å–∞–Ω–∏–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è

    Raises:
        ExceptionType: –û–ø–∏—Å–∞–Ω–∏–µ –∫–æ–≥–¥–∞ –∏ –ø–æ—á–µ–º—É –≤–æ–∑–Ω–∏–∫–∞–µ—Ç –∏—Å–∫–ª—é—á–µ–Ω–∏–µ
    """
```

### üß™ Testing
- Write tests for all new functions
- Use pytest for testing
- Name test files with prefix `test_`
- Name test functions with prefix `test_`
- Use descriptive test names that indicate what is being tested
- Include positive and negative test cases

### üîí Error Handling
- Use specific exception types
- Always include error messages in Russian
- Log exceptions appropriately
- Don't catch generic exceptions without re-raising

### üìö Comments and Documentation
- –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ
- –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è —Ñ—É–Ω–∫—Ü–∏–π –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ
- Inline comments should explain WHY, not WHAT
- Keep comments up to date with code changes

### üõ†Ô∏è Tools and Formatting
- Use black for code formatting
- Use isort for import sorting
- Use mypy for type checking
- Use ruff for linting
